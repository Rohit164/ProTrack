module.exports = {

"[project]/node_modules/hono/dist/utils/body.js [app-route] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
// src/utils/body.ts
__turbopack_esm__({
    "parseBody": (()=>parseBody)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$hono$2f$dist$2f$request$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/hono/dist/request.js [app-route] (ecmascript)");
;
var parseBody = async (request, options = /* @__PURE__ */ Object.create(null))=>{
    const { all = false, dot = false } = options;
    const headers = request instanceof __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$hono$2f$dist$2f$request$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["HonoRequest"] ? request.raw.headers : request.headers;
    const contentType = headers.get("Content-Type");
    if (contentType?.startsWith("multipart/form-data") || contentType?.startsWith("application/x-www-form-urlencoded")) {
        return parseFormData(request, {
            all,
            dot
        });
    }
    return {};
};
async function parseFormData(request, options) {
    const formData = await request.formData();
    if (formData) {
        return convertFormDataToBodyData(formData, options);
    }
    return {};
}
function convertFormDataToBodyData(formData, options) {
    const form = /* @__PURE__ */ Object.create(null);
    formData.forEach((value, key)=>{
        const shouldParseAllValues = options.all || key.endsWith("[]");
        if (!shouldParseAllValues) {
            form[key] = value;
        } else {
            handleParsingAllValues(form, key, value);
        }
    });
    if (options.dot) {
        Object.entries(form).forEach(([key, value])=>{
            const shouldParseDotValues = key.includes(".");
            if (shouldParseDotValues) {
                handleParsingNestedValues(form, key, value);
                delete form[key];
            }
        });
    }
    return form;
}
var handleParsingAllValues = (form, key, value)=>{
    if (form[key] !== void 0) {
        if (Array.isArray(form[key])) {
            ;
            form[key].push(value);
        } else {
            form[key] = [
                form[key],
                value
            ];
        }
    } else {
        form[key] = value;
    }
};
var handleParsingNestedValues = (form, key, value)=>{
    let nestedForm = form;
    const keys = key.split(".");
    keys.forEach((key2, index)=>{
        if (index === keys.length - 1) {
            nestedForm[key2] = value;
        } else {
            if (!nestedForm[key2] || typeof nestedForm[key2] !== "object" || Array.isArray(nestedForm[key2]) || nestedForm[key2] instanceof File) {
                nestedForm[key2] = /* @__PURE__ */ Object.create(null);
            }
            nestedForm = nestedForm[key2];
        }
    });
};
;
}}),
"[project]/node_modules/hono/dist/utils/url.js [app-route] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
// src/utils/url.ts
__turbopack_esm__({
    "checkOptionalParameter": (()=>checkOptionalParameter),
    "decodeURIComponent_": (()=>decodeURIComponent_),
    "getPath": (()=>getPath),
    "getPathNoStrict": (()=>getPathNoStrict),
    "getPattern": (()=>getPattern),
    "getQueryParam": (()=>getQueryParam),
    "getQueryParams": (()=>getQueryParams),
    "getQueryStrings": (()=>getQueryStrings),
    "mergePath": (()=>mergePath),
    "splitPath": (()=>splitPath),
    "splitRoutingPath": (()=>splitRoutingPath),
    "tryDecode": (()=>tryDecode)
});
var splitPath = (path)=>{
    const paths = path.split("/");
    if (paths[0] === "") {
        paths.shift();
    }
    return paths;
};
var splitRoutingPath = (routePath)=>{
    const { groups, path } = extractGroupsFromPath(routePath);
    const paths = splitPath(path);
    return replaceGroupMarks(paths, groups);
};
var extractGroupsFromPath = (path)=>{
    const groups = [];
    path = path.replace(/\{[^}]+\}/g, (match, index)=>{
        const mark = `@${index}`;
        groups.push([
            mark,
            match
        ]);
        return mark;
    });
    return {
        groups,
        path
    };
};
var replaceGroupMarks = (paths, groups)=>{
    for(let i = groups.length - 1; i >= 0; i--){
        const [mark] = groups[i];
        for(let j = paths.length - 1; j >= 0; j--){
            if (paths[j].includes(mark)) {
                paths[j] = paths[j].replace(mark, groups[i][1]);
                break;
            }
        }
    }
    return paths;
};
var patternCache = {};
var getPattern = (label)=>{
    if (label === "*") {
        return "*";
    }
    const match = label.match(/^\:([^\{\}]+)(?:\{(.+)\})?$/);
    if (match) {
        if (!patternCache[label]) {
            if (match[2]) {
                patternCache[label] = [
                    label,
                    match[1],
                    new RegExp("^" + match[2] + "$")
                ];
            } else {
                patternCache[label] = [
                    label,
                    match[1],
                    true
                ];
            }
        }
        return patternCache[label];
    }
    return null;
};
var tryDecode = (str, decoder)=>{
    try {
        return decoder(str);
    } catch  {
        return str.replace(/(?:%[0-9A-Fa-f]{2})+/g, (match)=>{
            try {
                return decoder(match);
            } catch  {
                return match;
            }
        });
    }
};
var tryDecodeURI = (str)=>tryDecode(str, decodeURI);
var getPath = (request)=>{
    const url = request.url;
    const start = url.indexOf("/", 8);
    let i = start;
    for(; i < url.length; i++){
        const charCode = url.charCodeAt(i);
        if (charCode === 37) {
            const queryIndex = url.indexOf("?", i);
            const path = url.slice(start, queryIndex === -1 ? void 0 : queryIndex);
            return tryDecodeURI(path.includes("%25") ? path.replace(/%25/g, "%2525") : path);
        } else if (charCode === 63) {
            break;
        }
    }
    return url.slice(start, i);
};
var getQueryStrings = (url)=>{
    const queryIndex = url.indexOf("?", 8);
    return queryIndex === -1 ? "" : "?" + url.slice(queryIndex + 1);
};
var getPathNoStrict = (request)=>{
    const result = getPath(request);
    return result.length > 1 && result.at(-1) === "/" ? result.slice(0, -1) : result;
};
var mergePath = (...paths)=>{
    let p = "";
    let endsWithSlash = false;
    for (let path of paths){
        if (p.at(-1) === "/") {
            p = p.slice(0, -1);
            endsWithSlash = true;
        }
        if (path[0] !== "/") {
            path = `/${path}`;
        }
        if (path === "/" && endsWithSlash) {
            p = `${p}/`;
        } else if (path !== "/") {
            p = `${p}${path}`;
        }
        if (path === "/" && p === "") {
            p = "/";
        }
    }
    return p;
};
var checkOptionalParameter = (path)=>{
    if (!path.match(/\:.+\?$/)) {
        return null;
    }
    const segments = path.split("/");
    const results = [];
    let basePath = "";
    segments.forEach((segment)=>{
        if (segment !== "" && !/\:/.test(segment)) {
            basePath += "/" + segment;
        } else if (/\:/.test(segment)) {
            if (/\?/.test(segment)) {
                if (results.length === 0 && basePath === "") {
                    results.push("/");
                } else {
                    results.push(basePath);
                }
                const optionalSegment = segment.replace("?", "");
                basePath += "/" + optionalSegment;
                results.push(basePath);
            } else {
                basePath += "/" + segment;
            }
        }
    });
    return results.filter((v, i, a)=>a.indexOf(v) === i);
};
var _decodeURI = (value)=>{
    if (!/[%+]/.test(value)) {
        return value;
    }
    if (value.indexOf("+") !== -1) {
        value = value.replace(/\+/g, " ");
    }
    return value.indexOf("%") !== -1 ? decodeURIComponent_(value) : value;
};
var _getQueryParam = (url, key, multiple)=>{
    let encoded;
    if (!multiple && key && !/[%+]/.test(key)) {
        let keyIndex2 = url.indexOf(`?${key}`, 8);
        if (keyIndex2 === -1) {
            keyIndex2 = url.indexOf(`&${key}`, 8);
        }
        while(keyIndex2 !== -1){
            const trailingKeyCode = url.charCodeAt(keyIndex2 + key.length + 1);
            if (trailingKeyCode === 61) {
                const valueIndex = keyIndex2 + key.length + 2;
                const endIndex = url.indexOf("&", valueIndex);
                return _decodeURI(url.slice(valueIndex, endIndex === -1 ? void 0 : endIndex));
            } else if (trailingKeyCode == 38 || isNaN(trailingKeyCode)) {
                return "";
            }
            keyIndex2 = url.indexOf(`&${key}`, keyIndex2 + 1);
        }
        encoded = /[%+]/.test(url);
        if (!encoded) {
            return void 0;
        }
    }
    const results = {};
    encoded ??= /[%+]/.test(url);
    let keyIndex = url.indexOf("?", 8);
    while(keyIndex !== -1){
        const nextKeyIndex = url.indexOf("&", keyIndex + 1);
        let valueIndex = url.indexOf("=", keyIndex);
        if (valueIndex > nextKeyIndex && nextKeyIndex !== -1) {
            valueIndex = -1;
        }
        let name = url.slice(keyIndex + 1, valueIndex === -1 ? nextKeyIndex === -1 ? void 0 : nextKeyIndex : valueIndex);
        if (encoded) {
            name = _decodeURI(name);
        }
        keyIndex = nextKeyIndex;
        if (name === "") {
            continue;
        }
        let value;
        if (valueIndex === -1) {
            value = "";
        } else {
            value = url.slice(valueIndex + 1, nextKeyIndex === -1 ? void 0 : nextKeyIndex);
            if (encoded) {
                value = _decodeURI(value);
            }
        }
        if (multiple) {
            if (!(results[name] && Array.isArray(results[name]))) {
                results[name] = [];
            }
            ;
            results[name].push(value);
        } else {
            results[name] ??= value;
        }
    }
    return key ? results[key] : results;
};
var getQueryParam = _getQueryParam;
var getQueryParams = (url, key)=>{
    return _getQueryParam(url, key, true);
};
var decodeURIComponent_ = decodeURIComponent;
;
}}),
"[project]/node_modules/hono/dist/request.js [app-route] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
// src/request.ts
__turbopack_esm__({
    "HonoRequest": (()=>HonoRequest)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$hono$2f$dist$2f$utils$2f$body$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/hono/dist/utils/body.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$hono$2f$dist$2f$utils$2f$url$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/hono/dist/utils/url.js [app-route] (ecmascript)");
;
;
var tryDecodeURIComponent = (str)=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$hono$2f$dist$2f$utils$2f$url$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["tryDecode"])(str, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$hono$2f$dist$2f$utils$2f$url$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["decodeURIComponent_"]);
var HonoRequest = class {
    raw;
    #validatedData;
    #matchResult;
    routeIndex = 0;
    path;
    bodyCache = {};
    constructor(request, path = "/", matchResult = [
        []
    ]){
        this.raw = request;
        this.path = path;
        this.#matchResult = matchResult;
        this.#validatedData = {};
    }
    param(key) {
        return key ? this.#getDecodedParam(key) : this.#getAllDecodedParams();
    }
    #getDecodedParam(key) {
        const paramKey = this.#matchResult[0][this.routeIndex][1][key];
        const param = this.#getParamValue(paramKey);
        return param ? /\%/.test(param) ? tryDecodeURIComponent(param) : param : void 0;
    }
    #getAllDecodedParams() {
        const decoded = {};
        const keys = Object.keys(this.#matchResult[0][this.routeIndex][1]);
        for (const key of keys){
            const value = this.#getParamValue(this.#matchResult[0][this.routeIndex][1][key]);
            if (value && typeof value === "string") {
                decoded[key] = /\%/.test(value) ? tryDecodeURIComponent(value) : value;
            }
        }
        return decoded;
    }
    #getParamValue(paramKey) {
        return this.#matchResult[1] ? this.#matchResult[1][paramKey] : paramKey;
    }
    query(key) {
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$hono$2f$dist$2f$utils$2f$url$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["getQueryParam"])(this.url, key);
    }
    queries(key) {
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$hono$2f$dist$2f$utils$2f$url$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["getQueryParams"])(this.url, key);
    }
    header(name) {
        if (name) {
            return this.raw.headers.get(name.toLowerCase()) ?? void 0;
        }
        const headerData = {};
        this.raw.headers.forEach((value, key)=>{
            headerData[key] = value;
        });
        return headerData;
    }
    async parseBody(options) {
        return this.bodyCache.parsedBody ??= await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$hono$2f$dist$2f$utils$2f$body$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["parseBody"])(this, options);
    }
    #cachedBody = (key)=>{
        const { bodyCache, raw } = this;
        const cachedBody = bodyCache[key];
        if (cachedBody) {
            return cachedBody;
        }
        const anyCachedKey = Object.keys(bodyCache)[0];
        if (anyCachedKey) {
            return bodyCache[anyCachedKey].then((body)=>{
                if (anyCachedKey === "json") {
                    body = JSON.stringify(body);
                }
                return new Response(body)[key]();
            });
        }
        return bodyCache[key] = raw[key]();
    };
    json() {
        return this.#cachedBody("json");
    }
    text() {
        return this.#cachedBody("text");
    }
    arrayBuffer() {
        return this.#cachedBody("arrayBuffer");
    }
    blob() {
        return this.#cachedBody("blob");
    }
    formData() {
        return this.#cachedBody("formData");
    }
    addValidatedData(target, data) {
        this.#validatedData[target] = data;
    }
    valid(target) {
        return this.#validatedData[target];
    }
    get url() {
        return this.raw.url;
    }
    get method() {
        return this.raw.method;
    }
    get matchedRoutes() {
        return this.#matchResult[0].map(([[, route]])=>route);
    }
    get routePath() {
        return this.#matchResult[0].map(([[, route]])=>route)[this.routeIndex].path;
    }
};
;
}}),
"[project]/node_modules/hono/dist/utils/html.js [app-route] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
// src/utils/html.ts
__turbopack_esm__({
    "HtmlEscapedCallbackPhase": (()=>HtmlEscapedCallbackPhase),
    "escapeToBuffer": (()=>escapeToBuffer),
    "raw": (()=>raw),
    "resolveCallback": (()=>resolveCallback),
    "resolveCallbackSync": (()=>resolveCallbackSync),
    "stringBufferToString": (()=>stringBufferToString)
});
var HtmlEscapedCallbackPhase = {
    Stringify: 1,
    BeforeStream: 2,
    Stream: 3
};
var raw = (value, callbacks)=>{
    const escapedString = new String(value);
    escapedString.isEscaped = true;
    escapedString.callbacks = callbacks;
    return escapedString;
};
var escapeRe = /[&<>'"]/;
var stringBufferToString = async (buffer, callbacks)=>{
    let str = "";
    callbacks ||= [];
    const resolvedBuffer = await Promise.all(buffer);
    for(let i = resolvedBuffer.length - 1;; i--){
        str += resolvedBuffer[i];
        i--;
        if (i < 0) {
            break;
        }
        let r = resolvedBuffer[i];
        if (typeof r === "object") {
            callbacks.push(...r.callbacks || []);
        }
        const isEscaped = r.isEscaped;
        r = await (typeof r === "object" ? r.toString() : r);
        if (typeof r === "object") {
            callbacks.push(...r.callbacks || []);
        }
        if (r.isEscaped ?? isEscaped) {
            str += r;
        } else {
            const buf = [
                str
            ];
            escapeToBuffer(r, buf);
            str = buf[0];
        }
    }
    return raw(str, callbacks);
};
var escapeToBuffer = (str, buffer)=>{
    const match = str.search(escapeRe);
    if (match === -1) {
        buffer[0] += str;
        return;
    }
    let escape;
    let index;
    let lastIndex = 0;
    for(index = match; index < str.length; index++){
        switch(str.charCodeAt(index)){
            case 34:
                escape = "&quot;";
                break;
            case 39:
                escape = "&#39;";
                break;
            case 38:
                escape = "&amp;";
                break;
            case 60:
                escape = "&lt;";
                break;
            case 62:
                escape = "&gt;";
                break;
            default:
                continue;
        }
        buffer[0] += str.substring(lastIndex, index) + escape;
        lastIndex = index + 1;
    }
    buffer[0] += str.substring(lastIndex, index);
};
var resolveCallbackSync = (str)=>{
    const callbacks = str.callbacks;
    if (!callbacks?.length) {
        return str;
    }
    const buffer = [
        str
    ];
    const context = {};
    callbacks.forEach((c)=>c({
            phase: HtmlEscapedCallbackPhase.Stringify,
            buffer,
            context
        }));
    return buffer[0];
};
var resolveCallback = async (str, phase, preserveCallbacks, context, buffer)=>{
    if (typeof str === "object" && !(str instanceof String)) {
        if (!(str instanceof Promise)) {
            str = str.toString();
        }
        if (str instanceof Promise) {
            str = await str;
        }
    }
    const callbacks = str.callbacks;
    if (!callbacks?.length) {
        return Promise.resolve(str);
    }
    if (buffer) {
        buffer[0] += str;
    } else {
        buffer = [
            str
        ];
    }
    const resStr = Promise.all(callbacks.map((c)=>c({
            phase,
            buffer,
            context
        }))).then((res)=>Promise.all(res.filter(Boolean).map((str2)=>resolveCallback(str2, phase, false, context, buffer))).then(()=>buffer[0]));
    if (preserveCallbacks) {
        return raw(await resStr, callbacks);
    } else {
        return resStr;
    }
};
;
}}),
"[project]/node_modules/hono/dist/context.js [app-route] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
// src/context.ts
__turbopack_esm__({
    "Context": (()=>Context),
    "TEXT_PLAIN": (()=>TEXT_PLAIN)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$hono$2f$dist$2f$request$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/hono/dist/request.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$hono$2f$dist$2f$utils$2f$html$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/hono/dist/utils/html.js [app-route] (ecmascript)");
;
;
var TEXT_PLAIN = "text/plain; charset=UTF-8";
var setHeaders = (headers, map = {})=>{
    for (const key of Object.keys(map)){
        headers.set(key, map[key]);
    }
    return headers;
};
var Context = class {
    #rawRequest;
    #req;
    env = {};
    #var;
    finalized = false;
    error;
    #status = 200;
    #executionCtx;
    #headers;
    #preparedHeaders;
    #res;
    #isFresh = true;
    #layout;
    #renderer;
    #notFoundHandler;
    #matchResult;
    #path;
    constructor(req, options){
        this.#rawRequest = req;
        if (options) {
            this.#executionCtx = options.executionCtx;
            this.env = options.env;
            this.#notFoundHandler = options.notFoundHandler;
            this.#path = options.path;
            this.#matchResult = options.matchResult;
        }
    }
    get req() {
        this.#req ??= new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$hono$2f$dist$2f$request$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["HonoRequest"](this.#rawRequest, this.#path, this.#matchResult);
        return this.#req;
    }
    get event() {
        if (this.#executionCtx && "respondWith" in this.#executionCtx) {
            return this.#executionCtx;
        } else {
            throw Error("This context has no FetchEvent");
        }
    }
    get executionCtx() {
        if (this.#executionCtx) {
            return this.#executionCtx;
        } else {
            throw Error("This context has no ExecutionContext");
        }
    }
    get res() {
        this.#isFresh = false;
        return this.#res ||= new Response("404 Not Found", {
            status: 404
        });
    }
    set res(_res) {
        this.#isFresh = false;
        if (this.#res && _res) {
            try {
                for (const [k, v] of this.#res.headers.entries()){
                    if (k === "content-type") {
                        continue;
                    }
                    if (k === "set-cookie") {
                        const cookies = this.#res.headers.getSetCookie();
                        _res.headers.delete("set-cookie");
                        for (const cookie of cookies){
                            _res.headers.append("set-cookie", cookie);
                        }
                    } else {
                        _res.headers.set(k, v);
                    }
                }
            } catch (e) {
                if (e instanceof TypeError && e.message.includes("immutable")) {
                    this.res = new Response(_res.body, {
                        headers: _res.headers,
                        status: _res.status
                    });
                    return;
                } else {
                    throw e;
                }
            }
        }
        this.#res = _res;
        this.finalized = true;
    }
    render = (...args)=>{
        this.#renderer ??= (content)=>this.html(content);
        return this.#renderer(...args);
    };
    setLayout = (layout)=>this.#layout = layout;
    getLayout = ()=>this.#layout;
    setRenderer = (renderer)=>{
        this.#renderer = renderer;
    };
    header = (name, value, options)=>{
        if (value === void 0) {
            if (this.#headers) {
                this.#headers.delete(name);
            } else if (this.#preparedHeaders) {
                delete this.#preparedHeaders[name.toLocaleLowerCase()];
            }
            if (this.finalized) {
                this.res.headers.delete(name);
            }
            return;
        }
        if (options?.append) {
            if (!this.#headers) {
                this.#isFresh = false;
                this.#headers = new Headers(this.#preparedHeaders);
                this.#preparedHeaders = {};
            }
            this.#headers.append(name, value);
        } else {
            if (this.#headers) {
                this.#headers.set(name, value);
            } else {
                this.#preparedHeaders ??= {};
                this.#preparedHeaders[name.toLowerCase()] = value;
            }
        }
        if (this.finalized) {
            if (options?.append) {
                this.res.headers.append(name, value);
            } else {
                this.res.headers.set(name, value);
            }
        }
    };
    status = (status)=>{
        this.#isFresh = false;
        this.#status = status;
    };
    set = (key, value)=>{
        this.#var ??= /* @__PURE__ */ new Map();
        this.#var.set(key, value);
    };
    get = (key)=>{
        return this.#var ? this.#var.get(key) : void 0;
    };
    get var() {
        if (!this.#var) {
            return {};
        }
        return Object.fromEntries(this.#var);
    }
    #newResponse(data, arg, headers) {
        if (this.#isFresh && !headers && !arg && this.#status === 200) {
            return new Response(data, {
                headers: this.#preparedHeaders
            });
        }
        if (arg && typeof arg !== "number") {
            const header = new Headers(arg.headers);
            if (this.#headers) {
                this.#headers.forEach((v, k)=>{
                    if (k === "set-cookie") {
                        header.append(k, v);
                    } else {
                        header.set(k, v);
                    }
                });
            }
            const headers2 = setHeaders(header, this.#preparedHeaders);
            return new Response(data, {
                headers: headers2,
                status: arg.status ?? this.#status
            });
        }
        const status = typeof arg === "number" ? arg : this.#status;
        this.#preparedHeaders ??= {};
        this.#headers ??= new Headers();
        setHeaders(this.#headers, this.#preparedHeaders);
        if (this.#res) {
            this.#res.headers.forEach((v, k)=>{
                if (k === "set-cookie") {
                    this.#headers?.append(k, v);
                } else {
                    this.#headers?.set(k, v);
                }
            });
            setHeaders(this.#headers, this.#preparedHeaders);
        }
        headers ??= {};
        for (const [k, v] of Object.entries(headers)){
            if (typeof v === "string") {
                this.#headers.set(k, v);
            } else {
                this.#headers.delete(k);
                for (const v2 of v){
                    this.#headers.append(k, v2);
                }
            }
        }
        return new Response(data, {
            status,
            headers: this.#headers
        });
    }
    newResponse = (...args)=>this.#newResponse(...args);
    body = (data, arg, headers)=>{
        return typeof arg === "number" ? this.#newResponse(data, arg, headers) : this.#newResponse(data, arg);
    };
    text = (text, arg, headers)=>{
        if (!this.#preparedHeaders) {
            if (this.#isFresh && !headers && !arg) {
                return new Response(text);
            }
            this.#preparedHeaders = {};
        }
        this.#preparedHeaders["content-type"] = TEXT_PLAIN;
        if (typeof arg === "number") {
            return this.#newResponse(text, arg, headers);
        }
        return this.#newResponse(text, arg);
    };
    json = (object, arg, headers)=>{
        const body = JSON.stringify(object);
        this.#preparedHeaders ??= {};
        this.#preparedHeaders["content-type"] = "application/json";
        return typeof arg === "number" ? this.#newResponse(body, arg, headers) : this.#newResponse(body, arg);
    };
    html = (html, arg, headers)=>{
        this.#preparedHeaders ??= {};
        this.#preparedHeaders["content-type"] = "text/html; charset=UTF-8";
        if (typeof html === "object") {
            return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$hono$2f$dist$2f$utils$2f$html$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["resolveCallback"])(html, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$hono$2f$dist$2f$utils$2f$html$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["HtmlEscapedCallbackPhase"].Stringify, false, {}).then((html2)=>{
                return typeof arg === "number" ? this.#newResponse(html2, arg, headers) : this.#newResponse(html2, arg);
            });
        }
        return typeof arg === "number" ? this.#newResponse(html, arg, headers) : this.#newResponse(html, arg);
    };
    redirect = (location, status)=>{
        this.#headers ??= new Headers();
        this.#headers.set("Location", String(location));
        return this.newResponse(null, status ?? 302);
    };
    notFound = ()=>{
        this.#notFoundHandler ??= ()=>new Response();
        return this.#notFoundHandler(this);
    };
};
;
}}),
"[project]/node_modules/hono/dist/compose.js [app-route] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
// src/compose.ts
__turbopack_esm__({
    "compose": (()=>compose)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$hono$2f$dist$2f$context$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/hono/dist/context.js [app-route] (ecmascript)");
;
var compose = (middleware, onError, onNotFound)=>{
    return (context, next)=>{
        let index = -1;
        const isContext = context instanceof __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$hono$2f$dist$2f$context$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["Context"];
        return dispatch(0);
        "TURBOPACK unreachable";
        async function dispatch(i) {
            if (i <= index) {
                throw new Error("next() called multiple times");
            }
            index = i;
            let res;
            let isError = false;
            let handler;
            if (middleware[i]) {
                handler = middleware[i][0][0];
                if (isContext) {
                    context.req.routeIndex = i;
                }
            } else {
                handler = i === middleware.length && next || void 0;
            }
            if (!handler) {
                if (isContext && context.finalized === false && onNotFound) {
                    res = await onNotFound(context);
                }
            } else {
                try {
                    res = await handler(context, ()=>{
                        return dispatch(i + 1);
                    });
                } catch (err) {
                    if (err instanceof Error && isContext && onError) {
                        context.error = err;
                        res = await onError(err, context);
                        isError = true;
                    } else {
                        throw err;
                    }
                }
            }
            if (res && (context.finalized === false || isError)) {
                context.res = res;
            }
            return context;
        }
    };
};
;
}}),
"[project]/node_modules/hono/dist/router.js [app-route] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
// src/router.ts
__turbopack_esm__({
    "MESSAGE_MATCHER_IS_ALREADY_BUILT": (()=>MESSAGE_MATCHER_IS_ALREADY_BUILT),
    "METHODS": (()=>METHODS),
    "METHOD_NAME_ALL": (()=>METHOD_NAME_ALL),
    "METHOD_NAME_ALL_LOWERCASE": (()=>METHOD_NAME_ALL_LOWERCASE),
    "UnsupportedPathError": (()=>UnsupportedPathError)
});
var METHOD_NAME_ALL = "ALL";
var METHOD_NAME_ALL_LOWERCASE = "all";
var METHODS = [
    "get",
    "post",
    "put",
    "delete",
    "options",
    "patch"
];
var MESSAGE_MATCHER_IS_ALREADY_BUILT = "Can not add a route since the matcher is already built.";
var UnsupportedPathError = class extends Error {
};
;
}}),
"[project]/node_modules/hono/dist/utils/constants.js [app-route] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
// src/utils/constants.ts
__turbopack_esm__({
    "COMPOSED_HANDLER": (()=>COMPOSED_HANDLER)
});
var COMPOSED_HANDLER = "__COMPOSED_HANDLER";
;
}}),
"[project]/node_modules/hono/dist/hono-base.js [app-route] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
// src/hono-base.ts
__turbopack_esm__({
    "HonoBase": (()=>Hono)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$hono$2f$dist$2f$compose$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/hono/dist/compose.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$hono$2f$dist$2f$context$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/hono/dist/context.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$hono$2f$dist$2f$router$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/hono/dist/router.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$hono$2f$dist$2f$utils$2f$constants$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/hono/dist/utils/constants.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$hono$2f$dist$2f$utils$2f$url$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/hono/dist/utils/url.js [app-route] (ecmascript)");
;
;
;
;
;
var notFoundHandler = (c)=>{
    return c.text("404 Not Found", 404);
};
var errorHandler = (err, c)=>{
    if ("getResponse" in err) {
        return err.getResponse();
    }
    console.error(err);
    return c.text("Internal Server Error", 500);
};
var Hono = class {
    get;
    post;
    put;
    delete;
    options;
    patch;
    all;
    on;
    use;
    router;
    getPath;
    _basePath = "/";
    #path = "/";
    routes = [];
    constructor(options = {}){
        const allMethods = [
            ...__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$hono$2f$dist$2f$router$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["METHODS"],
            __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$hono$2f$dist$2f$router$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["METHOD_NAME_ALL_LOWERCASE"]
        ];
        allMethods.forEach((method)=>{
            this[method] = (args1, ...args)=>{
                if (typeof args1 === "string") {
                    this.#path = args1;
                } else {
                    this.#addRoute(method, this.#path, args1);
                }
                args.forEach((handler)=>{
                    this.#addRoute(method, this.#path, handler);
                });
                return this;
            };
        });
        this.on = (method, path, ...handlers)=>{
            for (const p of [
                path
            ].flat()){
                this.#path = p;
                for (const m of [
                    method
                ].flat()){
                    handlers.map((handler)=>{
                        this.#addRoute(m.toUpperCase(), this.#path, handler);
                    });
                }
            }
            return this;
        };
        this.use = (arg1, ...handlers)=>{
            if (typeof arg1 === "string") {
                this.#path = arg1;
            } else {
                this.#path = "*";
                handlers.unshift(arg1);
            }
            handlers.forEach((handler)=>{
                this.#addRoute(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$hono$2f$dist$2f$router$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["METHOD_NAME_ALL"], this.#path, handler);
            });
            return this;
        };
        const strict = options.strict ?? true;
        delete options.strict;
        Object.assign(this, options);
        this.getPath = strict ? options.getPath ?? __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$hono$2f$dist$2f$utils$2f$url$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["getPath"] : __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$hono$2f$dist$2f$utils$2f$url$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["getPathNoStrict"];
    }
    #clone() {
        const clone = new Hono({
            router: this.router,
            getPath: this.getPath
        });
        clone.routes = this.routes;
        return clone;
    }
    #notFoundHandler = notFoundHandler;
    errorHandler = errorHandler;
    route(path, app) {
        const subApp = this.basePath(path);
        app.routes.map((r)=>{
            let handler;
            if (app.errorHandler === errorHandler) {
                handler = r.handler;
            } else {
                handler = async (c, next)=>(await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$hono$2f$dist$2f$compose$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["compose"])([], app.errorHandler)(c, ()=>r.handler(c, next))).res;
                handler[__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$hono$2f$dist$2f$utils$2f$constants$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["COMPOSED_HANDLER"]] = r.handler;
            }
            subApp.#addRoute(r.method, r.path, handler);
        });
        return this;
    }
    basePath(path) {
        const subApp = this.#clone();
        subApp._basePath = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$hono$2f$dist$2f$utils$2f$url$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["mergePath"])(this._basePath, path);
        return subApp;
    }
    onError = (handler)=>{
        this.errorHandler = handler;
        return this;
    };
    notFound = (handler)=>{
        this.#notFoundHandler = handler;
        return this;
    };
    mount(path, applicationHandler, options) {
        let replaceRequest;
        let optionHandler;
        if (options) {
            if (typeof options === "function") {
                optionHandler = options;
            } else {
                optionHandler = options.optionHandler;
                replaceRequest = options.replaceRequest;
            }
        }
        const getOptions = optionHandler ? (c)=>{
            const options2 = optionHandler(c);
            return Array.isArray(options2) ? options2 : [
                options2
            ];
        } : (c)=>{
            let executionContext = void 0;
            try {
                executionContext = c.executionCtx;
            } catch  {}
            return [
                c.env,
                executionContext
            ];
        };
        replaceRequest ||= (()=>{
            const mergedPath = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$hono$2f$dist$2f$utils$2f$url$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["mergePath"])(this._basePath, path);
            const pathPrefixLength = mergedPath === "/" ? 0 : mergedPath.length;
            return (request)=>{
                const url = new URL(request.url);
                url.pathname = url.pathname.slice(pathPrefixLength) || "/";
                return new Request(url, request);
            };
        })();
        const handler = async (c, next)=>{
            const res = await applicationHandler(replaceRequest(c.req.raw), ...getOptions(c));
            if (res) {
                return res;
            }
            await next();
        };
        this.#addRoute(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$hono$2f$dist$2f$router$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["METHOD_NAME_ALL"], (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$hono$2f$dist$2f$utils$2f$url$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["mergePath"])(path, "*"), handler);
        return this;
    }
    #addRoute(method, path, handler) {
        method = method.toUpperCase();
        path = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$hono$2f$dist$2f$utils$2f$url$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["mergePath"])(this._basePath, path);
        const r = {
            path,
            method,
            handler
        };
        this.router.add(method, path, [
            handler,
            r
        ]);
        this.routes.push(r);
    }
    #handleError(err, c) {
        if (err instanceof Error) {
            return this.errorHandler(err, c);
        }
        throw err;
    }
    #dispatch(request, executionCtx, env, method) {
        if (method === "HEAD") {
            return (async ()=>new Response(null, await this.#dispatch(request, executionCtx, env, "GET")))();
        }
        const path = this.getPath(request, {
            env
        });
        const matchResult = this.router.match(method, path);
        const c = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$hono$2f$dist$2f$context$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["Context"](request, {
            path,
            matchResult,
            env,
            executionCtx,
            notFoundHandler: this.#notFoundHandler
        });
        if (matchResult[0].length === 1) {
            let res;
            try {
                res = matchResult[0][0][0][0](c, async ()=>{
                    c.res = await this.#notFoundHandler(c);
                });
            } catch (err) {
                return this.#handleError(err, c);
            }
            return res instanceof Promise ? res.then((resolved)=>resolved || (c.finalized ? c.res : this.#notFoundHandler(c))).catch((err)=>this.#handleError(err, c)) : res ?? this.#notFoundHandler(c);
        }
        const composed = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$hono$2f$dist$2f$compose$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["compose"])(matchResult[0], this.errorHandler, this.#notFoundHandler);
        return (async ()=>{
            try {
                const context = await composed(c);
                if (!context.finalized) {
                    throw new Error("Context is not finalized. Did you forget to return a Response object or `await next()`?");
                }
                return context.res;
            } catch (err) {
                return this.#handleError(err, c);
            }
        })();
    }
    fetch = (request, ...rest)=>{
        return this.#dispatch(request, rest[1], rest[0], request.method);
    };
    request = (input, requestInit, Env, executionCtx)=>{
        if (input instanceof Request) {
            return this.fetch(requestInit ? new Request(input, requestInit) : input, Env, executionCtx);
        }
        input = input.toString();
        return this.fetch(new Request(/^https?:\/\//.test(input) ? input : `http://localhost${(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$hono$2f$dist$2f$utils$2f$url$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["mergePath"])("/", input)}`, requestInit), Env, executionCtx);
    };
    fire = ()=>{
        addEventListener("fetch", (event)=>{
            event.respondWith(this.#dispatch(event.request, event, void 0, event.request.method));
        });
    };
};
;
}}),
"[project]/node_modules/hono/dist/router/reg-exp-router/node.js [app-route] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
// src/router/reg-exp-router/node.ts
__turbopack_esm__({
    "Node": (()=>Node),
    "PATH_ERROR": (()=>PATH_ERROR)
});
var LABEL_REG_EXP_STR = "[^/]+";
var ONLY_WILDCARD_REG_EXP_STR = ".*";
var TAIL_WILDCARD_REG_EXP_STR = "(?:|/.*)";
var PATH_ERROR = Symbol();
var regExpMetaChars = new Set(".\\+*[^]$()");
function compareKey(a, b) {
    if (a.length === 1) {
        return b.length === 1 ? a < b ? -1 : 1 : -1;
    }
    if (b.length === 1) {
        return 1;
    }
    if (a === ONLY_WILDCARD_REG_EXP_STR || a === TAIL_WILDCARD_REG_EXP_STR) {
        return 1;
    } else if (b === ONLY_WILDCARD_REG_EXP_STR || b === TAIL_WILDCARD_REG_EXP_STR) {
        return -1;
    }
    if (a === LABEL_REG_EXP_STR) {
        return 1;
    } else if (b === LABEL_REG_EXP_STR) {
        return -1;
    }
    return a.length === b.length ? a < b ? -1 : 1 : b.length - a.length;
}
var Node = class {
    #index;
    #varIndex;
    #children = /* @__PURE__ */ Object.create(null);
    insert(tokens, index, paramMap, context, pathErrorCheckOnly) {
        if (tokens.length === 0) {
            if (this.#index !== void 0) {
                throw PATH_ERROR;
            }
            if (pathErrorCheckOnly) {
                return;
            }
            this.#index = index;
            return;
        }
        const [token, ...restTokens] = tokens;
        const pattern = token === "*" ? restTokens.length === 0 ? [
            "",
            "",
            ONLY_WILDCARD_REG_EXP_STR
        ] : [
            "",
            "",
            LABEL_REG_EXP_STR
        ] : token === "/*" ? [
            "",
            "",
            TAIL_WILDCARD_REG_EXP_STR
        ] : token.match(/^\:([^\{\}]+)(?:\{(.+)\})?$/);
        let node;
        if (pattern) {
            const name = pattern[1];
            let regexpStr = pattern[2] || LABEL_REG_EXP_STR;
            if (name && pattern[2]) {
                regexpStr = regexpStr.replace(/^\((?!\?:)(?=[^)]+\)$)/, "(?:");
                if (/\((?!\?:)/.test(regexpStr)) {
                    throw PATH_ERROR;
                }
            }
            node = this.#children[regexpStr];
            if (!node) {
                if (Object.keys(this.#children).some((k)=>k !== ONLY_WILDCARD_REG_EXP_STR && k !== TAIL_WILDCARD_REG_EXP_STR)) {
                    throw PATH_ERROR;
                }
                if (pathErrorCheckOnly) {
                    return;
                }
                node = this.#children[regexpStr] = new Node();
                if (name !== "") {
                    node.#varIndex = context.varIndex++;
                }
            }
            if (!pathErrorCheckOnly && name !== "") {
                paramMap.push([
                    name,
                    node.#varIndex
                ]);
            }
        } else {
            node = this.#children[token];
            if (!node) {
                if (Object.keys(this.#children).some((k)=>k.length > 1 && k !== ONLY_WILDCARD_REG_EXP_STR && k !== TAIL_WILDCARD_REG_EXP_STR)) {
                    throw PATH_ERROR;
                }
                if (pathErrorCheckOnly) {
                    return;
                }
                node = this.#children[token] = new Node();
            }
        }
        node.insert(restTokens, index, paramMap, context, pathErrorCheckOnly);
    }
    buildRegExpStr() {
        const childKeys = Object.keys(this.#children).sort(compareKey);
        const strList = childKeys.map((k)=>{
            const c = this.#children[k];
            return (typeof c.#varIndex === "number" ? `(${k})@${c.#varIndex}` : regExpMetaChars.has(k) ? `\\${k}` : k) + c.buildRegExpStr();
        });
        if (typeof this.#index === "number") {
            strList.unshift(`#${this.#index}`);
        }
        if (strList.length === 0) {
            return "";
        }
        if (strList.length === 1) {
            return strList[0];
        }
        return "(?:" + strList.join("|") + ")";
    }
};
;
}}),
"[project]/node_modules/hono/dist/router/reg-exp-router/trie.js [app-route] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
// src/router/reg-exp-router/trie.ts
__turbopack_esm__({
    "Trie": (()=>Trie)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$hono$2f$dist$2f$router$2f$reg$2d$exp$2d$router$2f$node$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/hono/dist/router/reg-exp-router/node.js [app-route] (ecmascript)");
;
var Trie = class {
    #context = {
        varIndex: 0
    };
    #root = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$hono$2f$dist$2f$router$2f$reg$2d$exp$2d$router$2f$node$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["Node"]();
    insert(path, index, pathErrorCheckOnly) {
        const paramAssoc = [];
        const groups = [];
        for(let i = 0;;){
            let replaced = false;
            path = path.replace(/\{[^}]+\}/g, (m)=>{
                const mark = `@\\${i}`;
                groups[i] = [
                    mark,
                    m
                ];
                i++;
                replaced = true;
                return mark;
            });
            if (!replaced) {
                break;
            }
        }
        const tokens = path.match(/(?::[^\/]+)|(?:\/\*$)|./g) || [];
        for(let i = groups.length - 1; i >= 0; i--){
            const [mark] = groups[i];
            for(let j = tokens.length - 1; j >= 0; j--){
                if (tokens[j].indexOf(mark) !== -1) {
                    tokens[j] = tokens[j].replace(mark, groups[i][1]);
                    break;
                }
            }
        }
        this.#root.insert(tokens, index, paramAssoc, this.#context, pathErrorCheckOnly);
        return paramAssoc;
    }
    buildRegExp() {
        let regexp = this.#root.buildRegExpStr();
        if (regexp === "") {
            return [
                /^$/,
                [],
                []
            ];
        }
        let captureIndex = 0;
        const indexReplacementMap = [];
        const paramReplacementMap = [];
        regexp = regexp.replace(/#(\d+)|@(\d+)|\.\*\$/g, (_, handlerIndex, paramIndex)=>{
            if (handlerIndex !== void 0) {
                indexReplacementMap[++captureIndex] = Number(handlerIndex);
                return "$()";
            }
            if (paramIndex !== void 0) {
                paramReplacementMap[Number(paramIndex)] = ++captureIndex;
                return "";
            }
            return "";
        });
        return [
            new RegExp(`^${regexp}`),
            indexReplacementMap,
            paramReplacementMap
        ];
    }
};
;
}}),
"[project]/node_modules/hono/dist/router/reg-exp-router/router.js [app-route] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
// src/router/reg-exp-router/router.ts
__turbopack_esm__({
    "RegExpRouter": (()=>RegExpRouter)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$hono$2f$dist$2f$router$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/hono/dist/router.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$hono$2f$dist$2f$utils$2f$url$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/hono/dist/utils/url.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$hono$2f$dist$2f$router$2f$reg$2d$exp$2d$router$2f$node$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/hono/dist/router/reg-exp-router/node.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$hono$2f$dist$2f$router$2f$reg$2d$exp$2d$router$2f$trie$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/hono/dist/router/reg-exp-router/trie.js [app-route] (ecmascript)");
;
;
;
;
var emptyParam = [];
var nullMatcher = [
    /^$/,
    [],
    /* @__PURE__ */ Object.create(null)
];
var wildcardRegExpCache = /* @__PURE__ */ Object.create(null);
function buildWildcardRegExp(path) {
    return wildcardRegExpCache[path] ??= new RegExp(path === "*" ? "" : `^${path.replace(/\/\*$|([.\\+*[^\]$()])/g, (_, metaChar)=>metaChar ? `\\${metaChar}` : "(?:|/.*)")}$`);
}
function clearWildcardRegExpCache() {
    wildcardRegExpCache = /* @__PURE__ */ Object.create(null);
}
function buildMatcherFromPreprocessedRoutes(routes) {
    const trie = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$hono$2f$dist$2f$router$2f$reg$2d$exp$2d$router$2f$trie$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["Trie"]();
    const handlerData = [];
    if (routes.length === 0) {
        return nullMatcher;
    }
    const routesWithStaticPathFlag = routes.map((route)=>[
            !/\*|\/:/.test(route[0]),
            ...route
        ]).sort(([isStaticA, pathA], [isStaticB, pathB])=>isStaticA ? 1 : isStaticB ? -1 : pathA.length - pathB.length);
    const staticMap = /* @__PURE__ */ Object.create(null);
    for(let i = 0, j = -1, len = routesWithStaticPathFlag.length; i < len; i++){
        const [pathErrorCheckOnly, path, handlers] = routesWithStaticPathFlag[i];
        if (pathErrorCheckOnly) {
            staticMap[path] = [
                handlers.map(([h])=>[
                        h,
                        /* @__PURE__ */ Object.create(null)
                    ]),
                emptyParam
            ];
        } else {
            j++;
        }
        let paramAssoc;
        try {
            paramAssoc = trie.insert(path, j, pathErrorCheckOnly);
        } catch (e) {
            throw e === __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$hono$2f$dist$2f$router$2f$reg$2d$exp$2d$router$2f$node$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["PATH_ERROR"] ? new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$hono$2f$dist$2f$router$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["UnsupportedPathError"](path) : e;
        }
        if (pathErrorCheckOnly) {
            continue;
        }
        handlerData[j] = handlers.map(([h, paramCount])=>{
            const paramIndexMap = /* @__PURE__ */ Object.create(null);
            paramCount -= 1;
            for(; paramCount >= 0; paramCount--){
                const [key, value] = paramAssoc[paramCount];
                paramIndexMap[key] = value;
            }
            return [
                h,
                paramIndexMap
            ];
        });
    }
    const [regexp, indexReplacementMap, paramReplacementMap] = trie.buildRegExp();
    for(let i = 0, len = handlerData.length; i < len; i++){
        for(let j = 0, len2 = handlerData[i].length; j < len2; j++){
            const map = handlerData[i][j]?.[1];
            if (!map) {
                continue;
            }
            const keys = Object.keys(map);
            for(let k = 0, len3 = keys.length; k < len3; k++){
                map[keys[k]] = paramReplacementMap[map[keys[k]]];
            }
        }
    }
    const handlerMap = [];
    for(const i in indexReplacementMap){
        handlerMap[i] = handlerData[indexReplacementMap[i]];
    }
    return [
        regexp,
        handlerMap,
        staticMap
    ];
}
function findMiddleware(middleware, path) {
    if (!middleware) {
        return void 0;
    }
    for (const k of Object.keys(middleware).sort((a, b)=>b.length - a.length)){
        if (buildWildcardRegExp(k).test(path)) {
            return [
                ...middleware[k]
            ];
        }
    }
    return void 0;
}
var RegExpRouter = class {
    name = "RegExpRouter";
    #middleware;
    #routes;
    constructor(){
        this.#middleware = {
            [__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$hono$2f$dist$2f$router$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["METHOD_NAME_ALL"]]: /* @__PURE__ */ Object.create(null)
        };
        this.#routes = {
            [__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$hono$2f$dist$2f$router$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["METHOD_NAME_ALL"]]: /* @__PURE__ */ Object.create(null)
        };
    }
    add(method, path, handler) {
        const middleware = this.#middleware;
        const routes = this.#routes;
        if (!middleware || !routes) {
            throw new Error(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$hono$2f$dist$2f$router$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["MESSAGE_MATCHER_IS_ALREADY_BUILT"]);
        }
        if (!middleware[method]) {
            ;
            [
                middleware,
                routes
            ].forEach((handlerMap)=>{
                handlerMap[method] = /* @__PURE__ */ Object.create(null);
                Object.keys(handlerMap[__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$hono$2f$dist$2f$router$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["METHOD_NAME_ALL"]]).forEach((p)=>{
                    handlerMap[method][p] = [
                        ...handlerMap[__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$hono$2f$dist$2f$router$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["METHOD_NAME_ALL"]][p]
                    ];
                });
            });
        }
        if (path === "/*") {
            path = "*";
        }
        const paramCount = (path.match(/\/:/g) || []).length;
        if (/\*$/.test(path)) {
            const re = buildWildcardRegExp(path);
            if (method === __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$hono$2f$dist$2f$router$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["METHOD_NAME_ALL"]) {
                Object.keys(middleware).forEach((m)=>{
                    middleware[m][path] ||= findMiddleware(middleware[m], path) || findMiddleware(middleware[__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$hono$2f$dist$2f$router$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["METHOD_NAME_ALL"]], path) || [];
                });
            } else {
                middleware[method][path] ||= findMiddleware(middleware[method], path) || findMiddleware(middleware[__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$hono$2f$dist$2f$router$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["METHOD_NAME_ALL"]], path) || [];
            }
            Object.keys(middleware).forEach((m)=>{
                if (method === __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$hono$2f$dist$2f$router$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["METHOD_NAME_ALL"] || method === m) {
                    Object.keys(middleware[m]).forEach((p)=>{
                        re.test(p) && middleware[m][p].push([
                            handler,
                            paramCount
                        ]);
                    });
                }
            });
            Object.keys(routes).forEach((m)=>{
                if (method === __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$hono$2f$dist$2f$router$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["METHOD_NAME_ALL"] || method === m) {
                    Object.keys(routes[m]).forEach((p)=>re.test(p) && routes[m][p].push([
                            handler,
                            paramCount
                        ]));
                }
            });
            return;
        }
        const paths = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$hono$2f$dist$2f$utils$2f$url$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["checkOptionalParameter"])(path) || [
            path
        ];
        for(let i = 0, len = paths.length; i < len; i++){
            const path2 = paths[i];
            Object.keys(routes).forEach((m)=>{
                if (method === __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$hono$2f$dist$2f$router$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["METHOD_NAME_ALL"] || method === m) {
                    routes[m][path2] ||= [
                        ...findMiddleware(middleware[m], path2) || findMiddleware(middleware[__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$hono$2f$dist$2f$router$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["METHOD_NAME_ALL"]], path2) || []
                    ];
                    routes[m][path2].push([
                        handler,
                        paramCount - len + i + 1
                    ]);
                }
            });
        }
    }
    match(method, path) {
        clearWildcardRegExpCache();
        const matchers = this.#buildAllMatchers();
        this.match = (method2, path2)=>{
            const matcher = matchers[method2] || matchers[__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$hono$2f$dist$2f$router$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["METHOD_NAME_ALL"]];
            const staticMatch = matcher[2][path2];
            if (staticMatch) {
                return staticMatch;
            }
            const match = path2.match(matcher[0]);
            if (!match) {
                return [
                    [],
                    emptyParam
                ];
            }
            const index = match.indexOf("", 1);
            return [
                matcher[1][index],
                match
            ];
        };
        return this.match(method, path);
    }
    #buildAllMatchers() {
        const matchers = /* @__PURE__ */ Object.create(null);
        Object.keys(this.#routes).concat(Object.keys(this.#middleware)).forEach((method)=>{
            matchers[method] ||= this.#buildMatcher(method);
        });
        this.#middleware = this.#routes = void 0;
        return matchers;
    }
    #buildMatcher(method) {
        const routes = [];
        let hasOwnRoute = method === __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$hono$2f$dist$2f$router$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["METHOD_NAME_ALL"];
        [
            this.#middleware,
            this.#routes
        ].forEach((r)=>{
            const ownRoute = r[method] ? Object.keys(r[method]).map((path)=>[
                    path,
                    r[method][path]
                ]) : [];
            if (ownRoute.length !== 0) {
                hasOwnRoute ||= true;
                routes.push(...ownRoute);
            } else if (method !== __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$hono$2f$dist$2f$router$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["METHOD_NAME_ALL"]) {
                routes.push(...Object.keys(r[__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$hono$2f$dist$2f$router$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["METHOD_NAME_ALL"]]).map((path)=>[
                        path,
                        r[__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$hono$2f$dist$2f$router$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["METHOD_NAME_ALL"]][path]
                    ]));
            }
        });
        if (!hasOwnRoute) {
            return null;
        } else {
            return buildMatcherFromPreprocessedRoutes(routes);
        }
    }
};
;
}}),
"[project]/node_modules/hono/dist/router/reg-exp-router/index.js [app-route] (ecmascript) <locals>": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
// src/router/reg-exp-router/index.ts
__turbopack_esm__({});
;
;
}}),
"[project]/node_modules/hono/dist/router/reg-exp-router/index.js [app-route] (ecmascript) <module evaluation>": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, t: __turbopack_require_real__ } = __turbopack_context__;
{
__turbopack_esm__({});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$hono$2f$dist$2f$router$2f$reg$2d$exp$2d$router$2f$router$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/hono/dist/router/reg-exp-router/router.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$hono$2f$dist$2f$router$2f$reg$2d$exp$2d$router$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_import__("[project]/node_modules/hono/dist/router/reg-exp-router/index.js [app-route] (ecmascript) <locals>");
}}),
"[project]/node_modules/hono/dist/router/smart-router/router.js [app-route] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
// src/router/smart-router/router.ts
__turbopack_esm__({
    "SmartRouter": (()=>SmartRouter)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$hono$2f$dist$2f$router$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/hono/dist/router.js [app-route] (ecmascript)");
;
var SmartRouter = class {
    name = "SmartRouter";
    #routers = [];
    #routes = [];
    constructor(init){
        this.#routers = init.routers;
    }
    add(method, path, handler) {
        if (!this.#routes) {
            throw new Error(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$hono$2f$dist$2f$router$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["MESSAGE_MATCHER_IS_ALREADY_BUILT"]);
        }
        this.#routes.push([
            method,
            path,
            handler
        ]);
    }
    match(method, path) {
        if (!this.#routes) {
            throw new Error("Fatal error");
        }
        const routers = this.#routers;
        const routes = this.#routes;
        const len = routers.length;
        let i = 0;
        let res;
        for(; i < len; i++){
            const router = routers[i];
            try {
                for(let i2 = 0, len2 = routes.length; i2 < len2; i2++){
                    router.add(...routes[i2]);
                }
                res = router.match(method, path);
            } catch (e) {
                if (e instanceof __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$hono$2f$dist$2f$router$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["UnsupportedPathError"]) {
                    continue;
                }
                throw e;
            }
            this.match = router.match.bind(router);
            this.#routers = [
                router
            ];
            this.#routes = void 0;
            break;
        }
        if (i === len) {
            throw new Error("Fatal error");
        }
        this.name = `SmartRouter + ${this.activeRouter.name}`;
        return res;
    }
    get activeRouter() {
        if (this.#routes || this.#routers.length !== 1) {
            throw new Error("No active router has been determined yet.");
        }
        return this.#routers[0];
    }
};
;
}}),
"[project]/node_modules/hono/dist/router/smart-router/index.js [app-route] (ecmascript) <locals>": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
// src/router/smart-router/index.ts
__turbopack_esm__({});
;
;
}}),
"[project]/node_modules/hono/dist/router/smart-router/index.js [app-route] (ecmascript) <module evaluation>": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, t: __turbopack_require_real__ } = __turbopack_context__;
{
__turbopack_esm__({});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$hono$2f$dist$2f$router$2f$smart$2d$router$2f$router$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/hono/dist/router/smart-router/router.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$hono$2f$dist$2f$router$2f$smart$2d$router$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_import__("[project]/node_modules/hono/dist/router/smart-router/index.js [app-route] (ecmascript) <locals>");
}}),
"[project]/node_modules/hono/dist/router/trie-router/node.js [app-route] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
// src/router/trie-router/node.ts
__turbopack_esm__({
    "Node": (()=>Node)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$hono$2f$dist$2f$router$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/hono/dist/router.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$hono$2f$dist$2f$utils$2f$url$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/hono/dist/utils/url.js [app-route] (ecmascript)");
;
;
var emptyParams = /* @__PURE__ */ Object.create(null);
var Node = class {
    #methods;
    #children;
    #patterns;
    #order = 0;
    #params = emptyParams;
    constructor(method, handler, children){
        this.#children = children || /* @__PURE__ */ Object.create(null);
        this.#methods = [];
        if (method && handler) {
            const m = /* @__PURE__ */ Object.create(null);
            m[method] = {
                handler,
                possibleKeys: [],
                score: 0
            };
            this.#methods = [
                m
            ];
        }
        this.#patterns = [];
    }
    insert(method, path, handler) {
        this.#order = ++this.#order;
        let curNode = this;
        const parts = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$hono$2f$dist$2f$utils$2f$url$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["splitRoutingPath"])(path);
        const possibleKeys = [];
        for(let i = 0, len = parts.length; i < len; i++){
            const p = parts[i];
            if (Object.keys(curNode.#children).includes(p)) {
                curNode = curNode.#children[p];
                const pattern2 = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$hono$2f$dist$2f$utils$2f$url$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["getPattern"])(p);
                if (pattern2) {
                    possibleKeys.push(pattern2[1]);
                }
                continue;
            }
            curNode.#children[p] = new Node();
            const pattern = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$hono$2f$dist$2f$utils$2f$url$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["getPattern"])(p);
            if (pattern) {
                curNode.#patterns.push(pattern);
                possibleKeys.push(pattern[1]);
            }
            curNode = curNode.#children[p];
        }
        const m = /* @__PURE__ */ Object.create(null);
        const handlerSet = {
            handler,
            possibleKeys: possibleKeys.filter((v, i, a)=>a.indexOf(v) === i),
            score: this.#order
        };
        m[method] = handlerSet;
        curNode.#methods.push(m);
        return curNode;
    }
    #getHandlerSets(node, method, nodeParams, params) {
        const handlerSets = [];
        for(let i = 0, len = node.#methods.length; i < len; i++){
            const m = node.#methods[i];
            const handlerSet = m[method] || m[__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$hono$2f$dist$2f$router$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["METHOD_NAME_ALL"]];
            const processedSet = {};
            if (handlerSet !== void 0) {
                handlerSet.params = /* @__PURE__ */ Object.create(null);
                handlerSets.push(handlerSet);
                if (nodeParams !== emptyParams || params && params !== emptyParams) {
                    for(let i2 = 0, len2 = handlerSet.possibleKeys.length; i2 < len2; i2++){
                        const key = handlerSet.possibleKeys[i2];
                        const processed = processedSet[handlerSet.score];
                        handlerSet.params[key] = params?.[key] && !processed ? params[key] : nodeParams[key] ?? params?.[key];
                        processedSet[handlerSet.score] = true;
                    }
                }
            }
        }
        return handlerSets;
    }
    search(method, path) {
        const handlerSets = [];
        this.#params = emptyParams;
        const curNode = this;
        let curNodes = [
            curNode
        ];
        const parts = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$hono$2f$dist$2f$utils$2f$url$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["splitPath"])(path);
        for(let i = 0, len = parts.length; i < len; i++){
            const part = parts[i];
            const isLast = i === len - 1;
            const tempNodes = [];
            for(let j = 0, len2 = curNodes.length; j < len2; j++){
                const node = curNodes[j];
                const nextNode = node.#children[part];
                if (nextNode) {
                    nextNode.#params = node.#params;
                    if (isLast) {
                        if (nextNode.#children["*"]) {
                            handlerSets.push(...this.#getHandlerSets(nextNode.#children["*"], method, node.#params));
                        }
                        handlerSets.push(...this.#getHandlerSets(nextNode, method, node.#params));
                    } else {
                        tempNodes.push(nextNode);
                    }
                }
                for(let k = 0, len3 = node.#patterns.length; k < len3; k++){
                    const pattern = node.#patterns[k];
                    const params = node.#params === emptyParams ? {} : {
                        ...node.#params
                    };
                    if (pattern === "*") {
                        const astNode = node.#children["*"];
                        if (astNode) {
                            handlerSets.push(...this.#getHandlerSets(astNode, method, node.#params));
                            tempNodes.push(astNode);
                        }
                        continue;
                    }
                    if (part === "") {
                        continue;
                    }
                    const [key, name, matcher] = pattern;
                    const child = node.#children[key];
                    const restPathString = parts.slice(i).join("/");
                    if (matcher instanceof RegExp && matcher.test(restPathString)) {
                        params[name] = restPathString;
                        handlerSets.push(...this.#getHandlerSets(child, method, node.#params, params));
                        continue;
                    }
                    if (matcher === true || matcher.test(part)) {
                        params[name] = part;
                        if (isLast) {
                            handlerSets.push(...this.#getHandlerSets(child, method, params, node.#params));
                            if (child.#children["*"]) {
                                handlerSets.push(...this.#getHandlerSets(child.#children["*"], method, params, node.#params));
                            }
                        } else {
                            child.#params = params;
                            tempNodes.push(child);
                        }
                    }
                }
            }
            curNodes = tempNodes;
        }
        if (handlerSets.length > 1) {
            handlerSets.sort((a, b)=>{
                return a.score - b.score;
            });
        }
        return [
            handlerSets.map(({ handler, params })=>[
                    handler,
                    params
                ])
        ];
    }
};
;
}}),
"[project]/node_modules/hono/dist/router/trie-router/router.js [app-route] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
// src/router/trie-router/router.ts
__turbopack_esm__({
    "TrieRouter": (()=>TrieRouter)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$hono$2f$dist$2f$utils$2f$url$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/hono/dist/utils/url.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$hono$2f$dist$2f$router$2f$trie$2d$router$2f$node$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/hono/dist/router/trie-router/node.js [app-route] (ecmascript)");
;
;
var TrieRouter = class {
    name = "TrieRouter";
    #node;
    constructor(){
        this.#node = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$hono$2f$dist$2f$router$2f$trie$2d$router$2f$node$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["Node"]();
    }
    add(method, path, handler) {
        const results = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$hono$2f$dist$2f$utils$2f$url$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["checkOptionalParameter"])(path);
        if (results) {
            for(let i = 0, len = results.length; i < len; i++){
                this.#node.insert(method, results[i], handler);
            }
            return;
        }
        this.#node.insert(method, path, handler);
    }
    match(method, path) {
        return this.#node.search(method, path);
    }
};
;
}}),
"[project]/node_modules/hono/dist/router/trie-router/index.js [app-route] (ecmascript) <locals>": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
// src/router/trie-router/index.ts
__turbopack_esm__({});
;
;
}}),
"[project]/node_modules/hono/dist/router/trie-router/index.js [app-route] (ecmascript) <module evaluation>": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, t: __turbopack_require_real__ } = __turbopack_context__;
{
__turbopack_esm__({});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$hono$2f$dist$2f$router$2f$trie$2d$router$2f$router$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/hono/dist/router/trie-router/router.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$hono$2f$dist$2f$router$2f$trie$2d$router$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_import__("[project]/node_modules/hono/dist/router/trie-router/index.js [app-route] (ecmascript) <locals>");
}}),
"[project]/node_modules/hono/dist/hono.js [app-route] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
// src/hono.ts
__turbopack_esm__({
    "Hono": (()=>Hono)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$hono$2f$dist$2f$hono$2d$base$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/hono/dist/hono-base.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$hono$2f$dist$2f$router$2f$reg$2d$exp$2d$router$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_import__("[project]/node_modules/hono/dist/router/reg-exp-router/index.js [app-route] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$hono$2f$dist$2f$router$2f$smart$2d$router$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_import__("[project]/node_modules/hono/dist/router/smart-router/index.js [app-route] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$hono$2f$dist$2f$router$2f$trie$2d$router$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_import__("[project]/node_modules/hono/dist/router/trie-router/index.js [app-route] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$hono$2f$dist$2f$router$2f$smart$2d$router$2f$router$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/hono/dist/router/smart-router/router.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$hono$2f$dist$2f$router$2f$reg$2d$exp$2d$router$2f$router$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/hono/dist/router/reg-exp-router/router.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$hono$2f$dist$2f$router$2f$trie$2d$router$2f$router$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/hono/dist/router/trie-router/router.js [app-route] (ecmascript)");
;
;
;
;
var Hono = class extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$hono$2f$dist$2f$hono$2d$base$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["HonoBase"] {
    constructor(options = {}){
        super(options);
        this.router = options.router ?? new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$hono$2f$dist$2f$router$2f$smart$2d$router$2f$router$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["SmartRouter"]({
            routers: [
                new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$hono$2f$dist$2f$router$2f$reg$2d$exp$2d$router$2f$router$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["RegExpRouter"](),
                new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$hono$2f$dist$2f$router$2f$trie$2d$router$2f$router$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["TrieRouter"]()
            ]
        });
    }
};
;
}}),
"[project]/node_modules/hono/dist/index.js [app-route] (ecmascript) <locals>": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
// src/index.ts
__turbopack_esm__({});
;
;
}}),
"[project]/node_modules/hono/dist/index.js [app-route] (ecmascript) <module evaluation>": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, t: __turbopack_require_real__ } = __turbopack_context__;
{
__turbopack_esm__({});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$hono$2f$dist$2f$hono$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/hono/dist/hono.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$hono$2f$dist$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_import__("[project]/node_modules/hono/dist/index.js [app-route] (ecmascript) <locals>");
}}),
"[project]/node_modules/hono/dist/adapter/vercel/handler.js [app-route] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
// src/adapter/vercel/handler.ts
__turbopack_esm__({
    "handle": (()=>handle)
});
var handle = (app)=>(req)=>{
        return app.fetch(req);
    };
;
}}),
"[project]/node_modules/hono/dist/adapter/vercel/conninfo.js [app-route] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
// src/adapter/vercel/conninfo.ts
__turbopack_esm__({
    "getConnInfo": (()=>getConnInfo)
});
var getConnInfo = (c)=>({
        remote: {
            address: c.req.header("x-real-ip")
        }
    });
;
}}),
"[project]/node_modules/hono/dist/adapter/vercel/index.js [app-route] (ecmascript) <locals>": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
// src/adapter/vercel/index.ts
__turbopack_esm__({});
;
;
;
}}),
"[project]/node_modules/hono/dist/adapter/vercel/index.js [app-route] (ecmascript) <module evaluation>": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, t: __turbopack_require_real__ } = __turbopack_context__;
{
__turbopack_esm__({});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$hono$2f$dist$2f$adapter$2f$vercel$2f$handler$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/hono/dist/adapter/vercel/handler.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$hono$2f$dist$2f$adapter$2f$vercel$2f$conninfo$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/hono/dist/adapter/vercel/conninfo.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$hono$2f$dist$2f$adapter$2f$vercel$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_import__("[project]/node_modules/hono/dist/adapter/vercel/index.js [app-route] (ecmascript) <locals>");
}}),
"[project]/node_modules/hono/dist/utils/cookie.js [app-route] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
// src/utils/cookie.ts
__turbopack_esm__({
    "parse": (()=>parse),
    "parseSigned": (()=>parseSigned),
    "serialize": (()=>serialize),
    "serializeSigned": (()=>serializeSigned)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$hono$2f$dist$2f$utils$2f$url$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/hono/dist/utils/url.js [app-route] (ecmascript)");
;
var algorithm = {
    name: "HMAC",
    hash: "SHA-256"
};
var getCryptoKey = async (secret)=>{
    const secretBuf = typeof secret === "string" ? new TextEncoder().encode(secret) : secret;
    return await crypto.subtle.importKey("raw", secretBuf, algorithm, false, [
        "sign",
        "verify"
    ]);
};
var makeSignature = async (value, secret)=>{
    const key = await getCryptoKey(secret);
    const signature = await crypto.subtle.sign(algorithm.name, key, new TextEncoder().encode(value));
    return btoa(String.fromCharCode(...new Uint8Array(signature)));
};
var verifySignature = async (base64Signature, value, secret)=>{
    try {
        const signatureBinStr = atob(base64Signature);
        const signature = new Uint8Array(signatureBinStr.length);
        for(let i = 0, len = signatureBinStr.length; i < len; i++){
            signature[i] = signatureBinStr.charCodeAt(i);
        }
        return await crypto.subtle.verify(algorithm, secret, signature, new TextEncoder().encode(value));
    } catch  {
        return false;
    }
};
var validCookieNameRegEx = /^[\w!#$%&'*.^`|~+-]+$/;
var validCookieValueRegEx = /^[ !#-:<-[\]-~]*$/;
var parse = (cookie, name)=>{
    if (name && cookie.indexOf(name) === -1) {
        return {};
    }
    const pairs = cookie.trim().split(";");
    const parsedCookie = {};
    for (let pairStr of pairs){
        pairStr = pairStr.trim();
        const valueStartPos = pairStr.indexOf("=");
        if (valueStartPos === -1) {
            continue;
        }
        const cookieName = pairStr.substring(0, valueStartPos).trim();
        if (name && name !== cookieName || !validCookieNameRegEx.test(cookieName)) {
            continue;
        }
        let cookieValue = pairStr.substring(valueStartPos + 1).trim();
        if (cookieValue.startsWith('"') && cookieValue.endsWith('"')) {
            cookieValue = cookieValue.slice(1, -1);
        }
        if (validCookieValueRegEx.test(cookieValue)) {
            parsedCookie[cookieName] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$hono$2f$dist$2f$utils$2f$url$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["decodeURIComponent_"])(cookieValue);
            if (name) {
                break;
            }
        }
    }
    return parsedCookie;
};
var parseSigned = async (cookie, secret, name)=>{
    const parsedCookie = {};
    const secretKey = await getCryptoKey(secret);
    for (const [key, value] of Object.entries(parse(cookie, name))){
        const signatureStartPos = value.lastIndexOf(".");
        if (signatureStartPos < 1) {
            continue;
        }
        const signedValue = value.substring(0, signatureStartPos);
        const signature = value.substring(signatureStartPos + 1);
        if (signature.length !== 44 || !signature.endsWith("=")) {
            continue;
        }
        const isVerified = await verifySignature(signature, signedValue, secretKey);
        parsedCookie[key] = isVerified ? signedValue : false;
    }
    return parsedCookie;
};
var _serialize = (name, value, opt = {})=>{
    let cookie = `${name}=${value}`;
    if (name.startsWith("__Secure-") && !opt.secure) {
        throw new Error("__Secure- Cookie must have Secure attributes");
    }
    if (name.startsWith("__Host-")) {
        if (!opt.secure) {
            throw new Error("__Host- Cookie must have Secure attributes");
        }
        if (opt.path !== "/") {
            throw new Error('__Host- Cookie must have Path attributes with "/"');
        }
        if (opt.domain) {
            throw new Error("__Host- Cookie must not have Domain attributes");
        }
    }
    if (opt && typeof opt.maxAge === "number" && opt.maxAge >= 0) {
        if (opt.maxAge > 3456e4) {
            throw new Error("Cookies Max-Age SHOULD NOT be greater than 400 days (34560000 seconds) in duration.");
        }
        cookie += `; Max-Age=${opt.maxAge | 0}`;
    }
    if (opt.domain && opt.prefix !== "host") {
        cookie += `; Domain=${opt.domain}`;
    }
    if (opt.path) {
        cookie += `; Path=${opt.path}`;
    }
    if (opt.expires) {
        if (opt.expires.getTime() - Date.now() > 3456e7) {
            throw new Error("Cookies Expires SHOULD NOT be greater than 400 days (34560000 seconds) in the future.");
        }
        cookie += `; Expires=${opt.expires.toUTCString()}`;
    }
    if (opt.httpOnly) {
        cookie += "; HttpOnly";
    }
    if (opt.secure) {
        cookie += "; Secure";
    }
    if (opt.sameSite) {
        cookie += `; SameSite=${opt.sameSite.charAt(0).toUpperCase() + opt.sameSite.slice(1)}`;
    }
    if (opt.priority) {
        cookie += `; Priority=${opt.priority}`;
    }
    if (opt.partitioned) {
        if (!opt.secure) {
            throw new Error("Partitioned Cookie must have Secure attributes");
        }
        cookie += "; Partitioned";
    }
    return cookie;
};
var serialize = (name, value, opt)=>{
    value = encodeURIComponent(value);
    return _serialize(name, value, opt);
};
var serializeSigned = async (name, value, secret, opt = {})=>{
    const signature = await makeSignature(value, secret);
    value = `${value}.${signature}`;
    value = encodeURIComponent(value);
    return _serialize(name, value, opt);
};
;
}}),
"[project]/node_modules/hono/dist/helper/cookie/index.js [app-route] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
// src/helper/cookie/index.ts
__turbopack_esm__({
    "deleteCookie": (()=>deleteCookie),
    "getCookie": (()=>getCookie),
    "getSignedCookie": (()=>getSignedCookie),
    "setCookie": (()=>setCookie),
    "setSignedCookie": (()=>setSignedCookie)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$hono$2f$dist$2f$utils$2f$cookie$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/hono/dist/utils/cookie.js [app-route] (ecmascript)");
;
var getCookie = (c, key, prefix)=>{
    const cookie = c.req.raw.headers.get("Cookie");
    if (typeof key === "string") {
        if (!cookie) {
            return void 0;
        }
        let finalKey = key;
        if (prefix === "secure") {
            finalKey = "__Secure-" + key;
        } else if (prefix === "host") {
            finalKey = "__Host-" + key;
        }
        const obj2 = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$hono$2f$dist$2f$utils$2f$cookie$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["parse"])(cookie, finalKey);
        return obj2[finalKey];
    }
    if (!cookie) {
        return {};
    }
    const obj = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$hono$2f$dist$2f$utils$2f$cookie$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["parse"])(cookie);
    return obj;
};
var getSignedCookie = async (c, secret, key, prefix)=>{
    const cookie = c.req.raw.headers.get("Cookie");
    if (typeof key === "string") {
        if (!cookie) {
            return void 0;
        }
        let finalKey = key;
        if (prefix === "secure") {
            finalKey = "__Secure-" + key;
        } else if (prefix === "host") {
            finalKey = "__Host-" + key;
        }
        const obj2 = await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$hono$2f$dist$2f$utils$2f$cookie$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["parseSigned"])(cookie, secret, finalKey);
        return obj2[finalKey];
    }
    if (!cookie) {
        return {};
    }
    const obj = await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$hono$2f$dist$2f$utils$2f$cookie$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["parseSigned"])(cookie, secret);
    return obj;
};
var setCookie = (c, name, value, opt)=>{
    let cookie;
    if (opt?.prefix === "secure") {
        cookie = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$hono$2f$dist$2f$utils$2f$cookie$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["serialize"])("__Secure-" + name, value, {
            path: "/",
            ...opt,
            secure: true
        });
    } else if (opt?.prefix === "host") {
        cookie = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$hono$2f$dist$2f$utils$2f$cookie$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["serialize"])("__Host-" + name, value, {
            ...opt,
            path: "/",
            secure: true,
            domain: void 0
        });
    } else {
        cookie = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$hono$2f$dist$2f$utils$2f$cookie$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["serialize"])(name, value, {
            path: "/",
            ...opt
        });
    }
    c.header("Set-Cookie", cookie, {
        append: true
    });
};
var setSignedCookie = async (c, name, value, secret, opt)=>{
    let cookie;
    if (opt?.prefix === "secure") {
        cookie = await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$hono$2f$dist$2f$utils$2f$cookie$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["serializeSigned"])("__Secure-" + name, value, secret, {
            path: "/",
            ...opt,
            secure: true
        });
    } else if (opt?.prefix === "host") {
        cookie = await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$hono$2f$dist$2f$utils$2f$cookie$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["serializeSigned"])("__Host-" + name, value, secret, {
            ...opt,
            path: "/",
            secure: true,
            domain: void 0
        });
    } else {
        cookie = await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$hono$2f$dist$2f$utils$2f$cookie$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["serializeSigned"])(name, value, secret, {
            path: "/",
            ...opt
        });
    }
    c.header("set-cookie", cookie, {
        append: true
    });
};
var deleteCookie = (c, name, opt)=>{
    const deletedCookie = getCookie(c, name);
    setCookie(c, name, "", {
        ...opt,
        maxAge: 0
    });
    return deletedCookie;
};
;
}}),
"[project]/node_modules/hono/dist/http-exception.js [app-route] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
// src/http-exception.ts
__turbopack_esm__({
    "HTTPException": (()=>HTTPException)
});
var HTTPException = class extends Error {
    res;
    status;
    constructor(status = 500, options){
        super(options?.message, {
            cause: options?.cause
        });
        this.res = options?.res;
        this.status = status;
    }
    getResponse() {
        if (this.res) {
            const newResponse = new Response(this.res.body, {
                status: this.status,
                headers: this.res.headers
            });
            return newResponse;
        }
        return new Response(this.message, {
            status: this.status
        });
    }
};
;
}}),
"[project]/node_modules/hono/dist/utils/crypto.js [app-route] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
// src/utils/crypto.ts
__turbopack_esm__({
    "createHash": (()=>createHash),
    "md5": (()=>md5),
    "sha1": (()=>sha1),
    "sha256": (()=>sha256)
});
var sha256 = async (data)=>{
    const algorithm = {
        name: "SHA-256",
        alias: "sha256"
    };
    const hash = await createHash(data, algorithm);
    return hash;
};
var sha1 = async (data)=>{
    const algorithm = {
        name: "SHA-1",
        alias: "sha1"
    };
    const hash = await createHash(data, algorithm);
    return hash;
};
var md5 = async (data)=>{
    const algorithm = {
        name: "MD5",
        alias: "md5"
    };
    const hash = await createHash(data, algorithm);
    return hash;
};
var createHash = async (data, algorithm)=>{
    let sourceBuffer;
    if (ArrayBuffer.isView(data) || data instanceof ArrayBuffer) {
        sourceBuffer = data;
    } else {
        if (typeof data === "object") {
            data = JSON.stringify(data);
        }
        sourceBuffer = new TextEncoder().encode(String(data));
    }
    if (crypto && crypto.subtle) {
        const buffer = await crypto.subtle.digest({
            name: algorithm.name
        }, sourceBuffer);
        const hash = Array.prototype.map.call(new Uint8Array(buffer), (x)=>("00" + x.toString(16)).slice(-2)).join("");
        return hash;
    }
    return null;
};
;
}}),
"[project]/node_modules/hono/dist/utils/buffer.js [app-route] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
// src/utils/buffer.ts
__turbopack_esm__({
    "bufferToFormData": (()=>bufferToFormData),
    "bufferToString": (()=>bufferToString),
    "equal": (()=>equal),
    "timingSafeEqual": (()=>timingSafeEqual)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$hono$2f$dist$2f$utils$2f$crypto$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/hono/dist/utils/crypto.js [app-route] (ecmascript)");
;
var equal = (a, b)=>{
    if (a === b) {
        return true;
    }
    if (a.byteLength !== b.byteLength) {
        return false;
    }
    const va = new DataView(a);
    const vb = new DataView(b);
    let i = va.byteLength;
    while(i--){
        if (va.getUint8(i) !== vb.getUint8(i)) {
            return false;
        }
    }
    return true;
};
var timingSafeEqual = async (a, b, hashFunction)=>{
    if (!hashFunction) {
        hashFunction = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$hono$2f$dist$2f$utils$2f$crypto$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["sha256"];
    }
    const [sa, sb] = await Promise.all([
        hashFunction(a),
        hashFunction(b)
    ]);
    if (!sa || !sb) {
        return false;
    }
    return sa === sb && a === b;
};
var bufferToString = (buffer)=>{
    if (buffer instanceof ArrayBuffer) {
        const enc = new TextDecoder("utf-8");
        return enc.decode(buffer);
    }
    return buffer;
};
var bufferToFormData = (arrayBuffer, contentType)=>{
    const response = new Response(arrayBuffer, {
        headers: {
            "Content-Type": contentType
        }
    });
    return response.formData();
};
;
}}),
"[project]/node_modules/hono/dist/validator/validator.js [app-route] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
// src/validator/validator.ts
__turbopack_esm__({
    "validator": (()=>validator)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$hono$2f$dist$2f$helper$2f$cookie$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/hono/dist/helper/cookie/index.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$hono$2f$dist$2f$http$2d$exception$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/hono/dist/http-exception.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$hono$2f$dist$2f$utils$2f$buffer$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/hono/dist/utils/buffer.js [app-route] (ecmascript)");
;
;
;
var jsonRegex = /^application\/([a-z-\.]+\+)?json(;\s*[a-zA-Z0-9\-]+\=([^;]+))*$/;
var multipartRegex = /^multipart\/form-data(;\s?boundary=[a-zA-Z0-9'"()+_,\-./:=?]+)?$/;
var urlencodedRegex = /^application\/x-www-form-urlencoded(;\s*[a-zA-Z0-9\-]+\=([^;]+))*$/;
var validator = (target, validationFunc)=>{
    return async (c, next)=>{
        let value = {};
        const contentType = c.req.header("Content-Type");
        switch(target){
            case "json":
                if (!contentType || !jsonRegex.test(contentType)) {
                    break;
                }
                try {
                    value = await c.req.json();
                } catch  {
                    const message = "Malformed JSON in request body";
                    throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$hono$2f$dist$2f$http$2d$exception$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["HTTPException"](400, {
                        message
                    });
                }
                break;
            case "form":
                {
                    if (!contentType || !(multipartRegex.test(contentType) || urlencodedRegex.test(contentType))) {
                        break;
                    }
                    let formData;
                    if (c.req.bodyCache.formData) {
                        formData = await c.req.bodyCache.formData;
                    } else {
                        try {
                            const arrayBuffer = await c.req.arrayBuffer();
                            formData = await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$hono$2f$dist$2f$utils$2f$buffer$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["bufferToFormData"])(arrayBuffer, contentType);
                            c.req.bodyCache.formData = formData;
                        } catch (e) {
                            let message = "Malformed FormData request.";
                            message += e instanceof Error ? ` ${e.message}` : ` ${String(e)}`;
                            throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$hono$2f$dist$2f$http$2d$exception$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["HTTPException"](400, {
                                message
                            });
                        }
                    }
                    const form = {};
                    formData.forEach((value2, key)=>{
                        if (key.endsWith("[]")) {
                            ;
                            (form[key] ??= []).push(value2);
                        } else if (Array.isArray(form[key])) {
                            ;
                            form[key].push(value2);
                        } else if (key in form) {
                            form[key] = [
                                form[key],
                                value2
                            ];
                        } else {
                            form[key] = value2;
                        }
                    });
                    value = form;
                    break;
                }
            case "query":
                value = Object.fromEntries(Object.entries(c.req.queries()).map(([k, v])=>{
                    return v.length === 1 ? [
                        k,
                        v[0]
                    ] : [
                        k,
                        v
                    ];
                }));
                break;
            case "param":
                value = c.req.param();
                break;
            case "header":
                value = c.req.header();
                break;
            case "cookie":
                value = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$hono$2f$dist$2f$helper$2f$cookie$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["getCookie"])(c);
                break;
        }
        const res = await validationFunc(value, c);
        if (res instanceof Response) {
            return res;
        }
        c.req.addValidatedData(target, res);
        await next();
    };
};
;
}}),
"[project]/node_modules/hono/dist/validator/index.js [app-route] (ecmascript) <locals>": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
// src/validator/index.ts
__turbopack_esm__({});
;
;
}}),
"[project]/node_modules/hono/dist/validator/index.js [app-route] (ecmascript) <module evaluation>": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, t: __turbopack_require_real__ } = __turbopack_context__;
{
__turbopack_esm__({});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$hono$2f$dist$2f$validator$2f$validator$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/hono/dist/validator/validator.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$hono$2f$dist$2f$validator$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_import__("[project]/node_modules/hono/dist/validator/index.js [app-route] (ecmascript) <locals>");
}}),
"[project]/node_modules/hono/dist/helper/factory/index.js [app-route] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
// src/helper/factory/index.ts
__turbopack_esm__({
    "Factory": (()=>Factory),
    "createFactory": (()=>createFactory),
    "createMiddleware": (()=>createMiddleware)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$hono$2f$dist$2f$hono$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/hono/dist/hono.js [app-route] (ecmascript)");
;
var Factory = class {
    initApp;
    constructor(init){
        this.initApp = init?.initApp;
    }
    createApp = ()=>{
        const app = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$hono$2f$dist$2f$hono$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["Hono"]();
        if (this.initApp) {
            this.initApp(app);
        }
        return app;
    };
    createMiddleware = (middleware)=>middleware;
    createHandlers = (...handlers)=>{
        return handlers.filter((handler)=>handler !== void 0);
    };
};
var createFactory = (init)=>new Factory(init);
var createMiddleware = (middleware)=>middleware;
;
}}),
"[project]/node_modules/@hono/zod-validator/dist/index.js [app-route] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: __turbopack_require_stub__ } = __turbopack_context__;
{
// src/index.ts
__turbopack_esm__({
    "zValidator": (()=>zValidator)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$hono$2f$dist$2f$validator$2f$index$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_import__("[project]/node_modules/hono/dist/validator/index.js [app-route] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$hono$2f$dist$2f$validator$2f$validator$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/hono/dist/validator/validator.js [app-route] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$route$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/zod/lib/index.mjs [app-route] (ecmascript)");
;
;
var zValidator = (target, schema, hook)=>// @ts-expect-error not typed well
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$hono$2f$dist$2f$validator$2f$validator$2e$js__$5b$app$2d$route$5d$__$28$ecmascript$29$__["validator"])(target, async (value, c)=>{
        let validatorValue = value;
        if (target === "header" && schema instanceof __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$zod$2f$lib$2f$index$2e$mjs__$5b$app$2d$route$5d$__$28$ecmascript$29$__["ZodObject"]) {
            const schemaKeys = Object.keys(schema.shape);
            const caseInsensitiveKeymap = Object.fromEntries(schemaKeys.map((key)=>[
                    key.toLowerCase(),
                    key
                ]));
            validatorValue = Object.fromEntries(Object.entries(value).map(([key, value2])=>[
                    caseInsensitiveKeymap[key] || key,
                    value2
                ]));
        }
        const result = await schema.safeParseAsync(validatorValue);
        if (hook) {
            const hookResult = await hook({
                data: validatorValue,
                ...result,
                target
            }, c);
            if (hookResult) {
                if (hookResult instanceof Response) {
                    return hookResult;
                }
                if ("response" in hookResult) {
                    return hookResult.response;
                }
            }
        }
        if (!result.success) {
            return c.json(result, 400);
        }
        return result.data;
    });
;
}}),

};

//# sourceMappingURL=node_modules_eb3d92._.js.map