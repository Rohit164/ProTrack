{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 47, "column": 0}, "map": {"version":3,"sources":["file://D%3A/ProTrack/ProTrack/src/features/auth/schemas.ts"],"sourcesContent":["import { z } from 'zod';\n\nexport const loginSchema = z.object({\n  email: z.string().email(\"Please enter a valid email address\"),\n  password: z.string().min(1, \"Password is required\"),\n});\n\nexport const registerSchema = z.object({\n  name: z.string().trim().min(3, \"Name must be at least 3 characters\"),\n  email: z.string().email(\"Please enter a valid email address\"),\n  password: z.string().min(8, \"Password must be at least 8 characters long\"),\n});"],"names":[],"mappings":";;;;AAAA;;AAEO,MAAM,cAAc,sIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IAClC,OAAO,sIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,KAAK,CAAC;IACxB,UAAU,sIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG;AAC9B;AAEO,MAAM,iBAAiB,sIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IACrC,MAAM,sIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,IAAI,GAAG,GAAG,CAAC,GAAG;IAC/B,OAAO,sIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,KAAK,CAAC;IACxB,UAAU,sIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG;AAC9B"}},
    {"offset": {"line": 62, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 292, "column": 0}, "map": {"version":3,"sources":["file://D%3A/ProTrack/ProTrack/src/lib/appwrite.ts"],"sourcesContent":["import \"server-only\";\nimport {\n    Client,\n    Account,\n    Storage,\n    Users,\n    Databases,\n} from \"node-appwrite\";\n\nexport async function createAdminClient() {\n    const client = new Client()\n        .setEndpoint(process.env.NEXT_PUBLIC_APPWRITE_ENDPOINT!)\n        .setProject(process.env.NEXT_PUBLIC_APPWRITE_PROJECT!)\n        .setKey(process.env.NEXT_APPWRITE_KEY!)\n\n    return{\n        get account(){\n            return new Account(client);\n        },\n    };\n};"],"names":[],"mappings":";;;AAAA;AACA;AAAA;AAAA;;;AAQO,eAAe;IAClB,MAAM,SAAS,IAAI,qKAAA,CAAA,SAAM,GACpB,WAAW,mEACX,UAAU,2DACV,MAAM,CAAC,QAAQ,GAAG,CAAC,iBAAiB;IAEzC,OAAM;QACF,IAAI,WAAS;YACT,OAAO,IAAI,kKAAA,CAAA,UAAO,CAAC;QACvB;IACJ;AACJ"}},
    {"offset": {"line": 309, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 315, "column": 0}, "map": {"version":3,"sources":["file://D%3A/ProTrack/ProTrack/src/features/auth/constants.ts"],"sourcesContent":["export const AUTH_COOKLE = \"Pro-Track-session\""],"names":[],"mappings":";;;AAAO,MAAM,cAAc"}},
    {"offset": {"line": 319, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 325, "column": 0}, "map": {"version":3,"sources":["file://D%3A/ProTrack/ProTrack/src/lib/session-middleware.ts"],"sourcesContent":["import \"server-only\";\n\nimport { \n    Account,\n    Client,\n    Databases,\n    Models,\n    Storage,\n    type Account as AccountType,\n    type Databases as DatabasesType,\n    type Storage as StorageType,\n    type Users as UsersType,\n} from \"node-appwrite\";\n\nimport { getCookie } from \"hono/cookie\";\nimport { createMiddleware } from \"hono/factory\";\n\nimport { AUTH_COOKLE } from \"@/features/auth/constants\";\nimport { error } from \"console\";\n\ntype AdditionalContext = {\n    Variables: {\n        account : AccountType;\n        databases: DatabasesType;\n        storage: StorageType;\n        users: UsersType;\n        user : Models.User<Models.Preferences>;\n    }\n}\n\nexport const sessionMiddleware = createMiddleware<AdditionalContext>(\n    async (c, next) => {\n        const client = new Client()\n            .setEndpoint(process.env.NEXT_PUBLIC_APPWRITE_ENDPOINT!)\n            .setProject(process.env.NEXT_PUBLIC_APPWRITE_PROJECT!)\n\n        const session = getCookie(c, AUTH_COOKLE);\n\n        if (!session) {\n            return c.json({ error: \"Unauthorized\" }, 401);\n        }\n\n        client.setSession(session);\n\n        const account = new Account(client);\n        const databases = new Databases(client);\n        const storage = new Storage(client);\n\n        const user = await account.get();\n\n        c.set(\"account\", account);\n        c.set(\"databases\", databases);\n        c.set(\"storage\", storage);\n        c.set(\"user\", user);\n\n        await next();\n    }\n)"],"names":[],"mappings":";;;AAAA;AAEA;AAYA;AACA;AAEA;AAfA;AAAA;AAAA;AAAA;;;;;;AA4BO,MAAM,oBAAoB,CAAA,GAAA,4JAAA,CAAA,mBAAgB,AAAD,EAC5C,OAAO,GAAG;IACN,MAAM,SAAS,IAAI,qKAAA,CAAA,SAAM,GACpB,WAAW,mEACX,UAAU;IAEf,MAAM,UAAU,CAAA,GAAA,2JAAA,CAAA,YAAS,AAAD,EAAE,GAAG,sIAAA,CAAA,cAAW;IAExC,IAAI,CAAC,SAAS;QACV,OAAO,EAAE,IAAI,CAAC;YAAE,OAAO;QAAe,GAAG;IAC7C;IAEA,OAAO,UAAU,CAAC;IAElB,MAAM,UAAU,IAAI,kKAAA,CAAA,UAAO,CAAC;IAC5B,MAAM,YAAY,IAAI,oKAAA,CAAA,YAAS,CAAC;IAChC,MAAM,UAAU,IAAI,kKAAA,CAAA,UAAO,CAAC;IAE5B,MAAM,OAAO,MAAM,QAAQ,GAAG;IAE9B,EAAE,GAAG,CAAC,WAAW;IACjB,EAAE,GAAG,CAAC,aAAa;IACnB,EAAE,GAAG,CAAC,WAAW;IACjB,EAAE,GAAG,CAAC,QAAQ;IAEd,MAAM;AACV"}},
    {"offset": {"line": 361, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 367, "column": 0}, "map": {"version":3,"sources":["file://D%3A/ProTrack/ProTrack/src/features/auth/server/route.ts"],"sourcesContent":["// route\n\nimport { Hono} from 'hono';\nimport {z} from \"zod\";\nimport { zValidator } from \"@hono/zod-validator\";\nimport { loginSchema, registerSchema } from '../schemas';\nimport { createAdminClient } from '@/lib/appwrite';\nimport { ID } from 'node-appwrite';\nimport { deleteCookie, setCookie } from \"hono/cookie\";\nimport { AUTH_COOKLE } from '../constants';\nimport { sessionMiddleware } from '@/lib/session-middleware';\n\n\nconst app = new Hono()\n    .get(\"/current\", sessionMiddleware, \n        (c) => {\n        const user = c.get(\"user\");\n\n        return c.json({ data: user });\n    }\n    )\n\n    .post(\"/login\", \n        zValidator(\"json\", loginSchema),  \n        async (c) => {\n        const { email, password } = c.req.valid(\"json\");\n        \n        const {account} = await createAdminClient();\n        const session = await account.createEmailPasswordSession(\n            email,\n            password,\n        );\n\n        setCookie(c, AUTH_COOKLE, session.secret,  {\n            path: \"/\",\n            httpOnly: true,\n            maxAge: 60 * 60 * 24 * 30,\n            secure: true,\n            sameSite: \"strict\",\n        });\n        \n        return c.json({ success : true });\n    })\n    .post(\n        \"/register\",\n        zValidator(\"json\", registerSchema),\n        async (c) => {\n            const { name, email, password } = c.req.valid(\"json\");\n            const { account } = await createAdminClient();\n            await account.create(\n                ID.unique(),\n                email,\n                password,\n                name,\n            );\n\n            const session = await account.createEmailPasswordSession(\n                email,\n                password,\n            );\n\n            setCookie(c, AUTH_COOKLE, session.secret,  {\n                path: \"/\",\n                httpOnly: true,\n                maxAge: 60 * 60 * 24 * 30,\n                secure: true,\n                sameSite: \"strict\",\n            });\n        \n            return c.json({ success: true });\n        }\n    )\n\n    .post(\"/logout\", sessionMiddleware, async (c) => {\n        const account = c.get(\"account\");\n\n        deleteCookie(c, AUTH_COOKLE);\n        await account.deleteSession(\"current\");\n\n        return c.json({ success: true });\n    });\n\n\nexport default app;"],"names":[],"mappings":"AAAA,QAAQ;;;;AAER;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAKA;;;;;;;;;AAMA,MAAM,MAAM,IAAI,sIAAA,CAAA,OAAI,GACf,GAAG,CAAC,YAAY,qIAAA,CAAA,oBAAiB,EAC9B,CAAC;IACD,MAAM,OAAO,EAAE,GAAG,CAAC;IAEnB,OAAO,EAAE,IAAI,CAAC;QAAE,MAAM;IAAK;AAC/B,GAGC,IAAI,CAAC,UACF,CAAA,GAAA,6JAAA,CAAA,aAAU,AAAD,EAAE,QAAQ,oIAAA,CAAA,cAAW,GAC9B,OAAO;IACP,MAAM,EAAE,KAAK,EAAE,QAAQ,EAAE,GAAG,EAAE,GAAG,CAAC,KAAK,CAAC;IAExC,MAAM,EAAC,OAAO,EAAC,GAAG,MAAM,CAAA,GAAA,wHAAA,CAAA,oBAAiB,AAAD;IACxC,MAAM,UAAU,MAAM,QAAQ,0BAA0B,CACpD,OACA;IAGJ,CAAA,GAAA,2JAAA,CAAA,YAAS,AAAD,EAAE,GAAG,sIAAA,CAAA,cAAW,EAAE,QAAQ,MAAM,EAAG;QACvC,MAAM;QACN,UAAU;QACV,QAAQ,KAAK,KAAK,KAAK;QACvB,QAAQ;QACR,UAAU;IACd;IAEA,OAAO,EAAE,IAAI,CAAC;QAAE,SAAU;IAAK;AACnC,GACC,IAAI,CACD,aACA,CAAA,GAAA,6JAAA,CAAA,aAAU,AAAD,EAAE,QAAQ,oIAAA,CAAA,iBAAc,GACjC,OAAO;IACH,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,QAAQ,EAAE,GAAG,EAAE,GAAG,CAAC,KAAK,CAAC;IAC9C,MAAM,EAAE,OAAO,EAAE,GAAG,MAAM,CAAA,GAAA,wHAAA,CAAA,oBAAiB,AAAD;IAC1C,MAAM,QAAQ,MAAM,CAChB,iJAAA,CAAA,KAAE,CAAC,MAAM,IACT,OACA,UACA;IAGJ,MAAM,UAAU,MAAM,QAAQ,0BAA0B,CACpD,OACA;IAGJ,CAAA,GAAA,2JAAA,CAAA,YAAS,AAAD,EAAE,GAAG,sIAAA,CAAA,cAAW,EAAE,QAAQ,MAAM,EAAG;QACvC,MAAM;QACN,UAAU;QACV,QAAQ,KAAK,KAAK,KAAK;QACvB,QAAQ;QACR,UAAU;IACd;IAEA,OAAO,EAAE,IAAI,CAAC;QAAE,SAAS;IAAK;AAClC,GAGH,IAAI,CAAC,WAAW,qIAAA,CAAA,oBAAiB,EAAE,OAAO;IACvC,MAAM,UAAU,EAAE,GAAG,CAAC;IAEtB,CAAA,GAAA,2JAAA,CAAA,eAAY,AAAD,EAAE,GAAG,sIAAA,CAAA,cAAW;IAC3B,MAAM,QAAQ,aAAa,CAAC;IAE5B,OAAO,EAAE,IAAI,CAAC;QAAE,SAAS;IAAK;AAClC;uCAGW"}},
    {"offset": {"line": 432, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 438, "column": 0}, "map": {"version":3,"sources":["file://D%3A/ProTrack/ProTrack/src/app/api/%5B%5B...route%5D%5D/route.ts"],"sourcesContent":["import { Hono } from 'hono';\nimport { handle } from 'hono/vercel';\nimport auth from \"@/features/auth/server/route\"\n\nconst app = new Hono().basePath(\"/api\");\n\nconst route = app\n    .route(\"/auth\", auth);\n\nexport const GET = handle(app);\nexport const POST = handle(app);\n\nexport type AppType = typeof route;\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;AAFA;AACA;;;;AAGA,MAAM,MAAM,IAAI,sIAAA,CAAA,OAAI,GAAG,QAAQ,CAAC;AAEhC,MAAM,QAAQ,IACT,KAAK,CAAC,SAAS,4IAAA,CAAA,UAAI;AAEjB,MAAM,MAAM,CAAA,GAAA,8JAAA,CAAA,SAAM,AAAD,EAAE;AACnB,MAAM,OAAO,CAAA,GAAA,8JAAA,CAAA,SAAM,AAAD,EAAE"}},
    {"offset": {"line": 454, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}